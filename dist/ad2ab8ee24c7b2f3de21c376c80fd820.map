{"version":3,"sources":["node_modules/@webcomponents/webcomponentsjs/webcomponents-loader.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ad2ab8ee24c7b2f3de21c376c80fd820.map","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n(function() {\n  'use strict';\n  // global for (1) existence means `WebComponentsReady` will file,\n  // (2) WebComponents.ready == true means event has fired.\n  window.WebComponents = window.WebComponents || {};\n  var name = 'webcomponents-loader.js';\n  // Feature detect which polyfill needs to be imported.\n  var polyfills = [];\n  if (!('import' in document.createElement('link'))) {\n    polyfills.push('hi');\n  }\n  if (!('attachShadow' in Element.prototype && 'getRootNode' in Element.prototype) ||\n    (window.ShadyDOM && window.ShadyDOM.force)) {\n    polyfills.push('sd');\n  }\n  if (!window.customElements || window.customElements.forcePolyfill) {\n    polyfills.push('ce');\n  }\n  // NOTE: any browser that does not have template or ES6 features\n  // must load the full suite (called `lite` for legacy reasons) of polyfills.\n  if (!('content' in document.createElement('template')) || !window.Promise || !Array.from ||\n    // Edge has broken fragment cloning which means you cannot clone template.content\n    !(document.createDocumentFragment().cloneNode() instanceof DocumentFragment)) {\n    polyfills = ['lite'];\n  }\n\n  if (polyfills.length) {\n    var script = document.querySelector('script[src*=\"' + name +'\"]');\n    var newScript = document.createElement('script');\n    // Load it from the right place.\n    var replacement = 'webcomponents-' + polyfills.join('-') + '.js';\n    var url = script.src.replace(name, replacement);\n    newScript.src = url;\n    // NOTE: this is required to ensure the polyfills are loaded before\n    // *native* html imports load on older Chrome versions. This *is* CSP\n    // compliant since CSP rules must have allowed this script to run.\n    // In all other cases, this can be async.\n    if (document.readyState === 'loading' && ('import' in document.createElement('link'))) {\n      document.write(newScript.outerHTML);\n    } else {\n      document.head.appendChild(newScript);\n    }\n  } else {\n    // Ensure `WebComponentsReady` is fired also when there are no polyfills loaded.\n    // however, we have to wait for the document to be in 'interactive' state,\n    // otherwise a rAF may fire before scripts in <body>\n\n    var fire = function() {\n      requestAnimationFrame(function() {\n        window.WebComponents.ready = true;\n        document.dispatchEvent(new CustomEvent('WebComponentsReady', {bubbles: true}));\n      });\n    };\n\n    if (document.readyState !== 'loading') {\n      fire();\n    } else {\n      document.addEventListener('readystatechange', function wait() {\n        fire();\n        document.removeEventListener('readystatechange', wait);\n      });\n    }\n  }\n})();\n"]}